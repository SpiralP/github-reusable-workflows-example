name: Build and Release

on:
  pull_request:
    branches: [master, main]
  push:
    branches: ["*"]
    tags: ["*"]
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # for checkout

jobs:
  build:
    uses: SpiralP/github-reusable-workflows/.github/workflows/build.yml@9901d2ab457eb0e65ede9c486d90e17d37b70bd4 # main

  get-version-metadata:
    runs-on: ubuntu-24.04
    needs: build
    if: "${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && ! startsWith(github.event.head_commit.message, 'chore(release): ') }}"
    permissions:
      contents: read # for checkout
    outputs:
      version-metadata: ${{ steps.get-version-metadata.outputs.version-metadata }}
    concurrency:
      group: build-and-release-get-version-metadata-${{ github.ref }}
      cancel-in-progress: false # do not cancel in-progress jobs
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true
      - id: get-version-metadata
        run: |
          version_metadata="$(git tag --list 'v*.*.*' |wc -l)"
          test -z "$version_metadata" && echo "version_metadata is empty" && exit 1
          version_metadata="$(( version_metadata + 1 ))"
          echo "version-metadata=$version_metadata" | tee -a "$GITHUB_OUTPUT"

  release:
    uses: SpiralP/github-reusable-workflows/.github/workflows/release.yml@9901d2ab457eb0e65ede9c486d90e17d37b70bd4 # main
    needs: get-version-metadata
    if: "${{ needs.get-version-metadata.outputs.version-metadata }}"
    permissions: {} # none, since we use a custom app
    concurrency:
      group: build-and-release-release-${{ github.ref }}
      cancel-in-progress: false # do not cancel in-progress jobs
    with:
      environment-name: release
      extends: ./.github/semantic-release.json
      replace-files: |
        Cargo.lock
        Cargo.toml
        package-lock.json
        package.json
      version-metadata: ${{ needs.get-version-metadata.outputs.version-metadata }}
    secrets:
      app-id: ${{ secrets.APP_ID }}
      app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
